/*!
 * Torro Forms Version 1.0.0alpha1 (http://torro-forms.com)
 * Licensed under GNU General Public License v3 (http://www.gnu.org/licenses/gpl-3.0.html)
 */
!function(t,n,i,e){"use strict";function o(t){this.translations=t,this.extensions={},this.selectors={}}o.prototype={init:function(){this.handle_templatetag_buttons()},handle_templatetag_buttons:function(){i("html").on("click",function(){i(".torro-templatetag-list").hide()}),i(".torro-templatetag-button").on("click",function(t){var n=i(this).find(".torro-templatetag-list");"none"==n.css("display")?n.show():n.hide(),t.stopPropagation()});var t=i(".torro-templatetag-list .torro-templatetag");t.unbind(),t.on("click",function(){var t="{"+i(this).attr("data-tagname")+"}",n=i(this).attr("data-input-id"),e=tinymce.get(n);if(e&&e instanceof tinymce.Editor)e.insertContent(t);else{var o=i('input[name="'+n+'"]');o.val(o.val()+t)}})},init_extensions:function(){var t=Object.keys(this.extensions);for(var n in t)this.extensions[t[n]].init()},add_extension:function(t,n){this.extensions[t]=n},get_extension:function(t){return this.extensions[t]},get_extensions:function(){return this.extensions},rand:function(){var t=new Date,n=Math.floor(9991*Math.random())+10;return n*=t.getTime(),n=n.toString()}};var s=new o(e);i(document).ready(function(){s.init(),s.init_extensions()}),t.templatetags=s}(window,wp,jQuery,translation_fb);